/* ==============================================================================================
 * OFF-CANVAS
 *
 * PLEASE NOTE
 * Current implementation only supports off-canvases coming from the right.
 * Some coding is required on OffCanvas.js and in this file to add support
 * for left side off-canvases.
 * ============================================================================================== */

.c-offCanvas {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  transform: translate3d(100%, 0, 0);
  transition: transform $offCanvasTransitionDuration $offCanvasTransitionTimingFunction;
  z-index: map_get($zIndexes, "offCanvas");

  &.is-open {
    transform: translate3d(0, 0, 0);
  }

  &.is-panning {
    transition: none;
  }
}




/* Overlay
   ============================================================================================== */

.c-offCanvasOverlay {
  visibility: hidden;
  opacity: 0;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: (map_get($zIndexes, "offCanvas") - 1);
  background: $offCanvasOverlayBackground;
  transition: visibility, opacity $offCanvasTransitionDuration $offCanvasTransitionTimingFunction;
  transition-delay: $offCanvasTransitionDuration, 0s;

  @include mq($until: tabletH) {
    .has-offCanvasOpen & {
      visibility: visible;
      opacity: 1;
      transition-delay: 0s;
    }
  }
}
